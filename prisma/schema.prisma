// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String? 
  email String? @unique 
  hashedPassword String? 
  image String?
  emailVerified DateTime? 
  isVerified Boolean? @default(false)
  verificationCode String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  posts Post[]
  comments Comment[] 
  replies Reply[]
  accounts Account[] 


}

model Post {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String 
  message String 
  userId String @db.ObjectId
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  comments Comment[] 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  message String 
  postId String @db.ObjectId
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  userId String @db.ObjectId
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  replies Reply[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Reply {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  message String 
  commentId String @db.ObjectId
  comment Comment @relation(fields: [commentId], references: [id], onDelete: Cascade)
  userId String @db.ObjectId
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  type String
  provider String 
  providerAccountId String 
  refresh_token String? @db.String
  access_token String? @db.String
  expires_at Int?
  token_type String?
  scope String?
  id_token String? @db.String 
  session_state String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

